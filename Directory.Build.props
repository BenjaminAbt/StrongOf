<Project>

    <!-- Head -->
    <PropertyGroup>
        <Company>Benjamin Abt</Company>
        <Authors>Benjamin Abt, SchwabenCode</Authors>
        <Product>BenjaminAbt.StrongOf</Product>
        <Copyright>Benjamin Abt</Copyright>
        <Title>StrongOf - Strong Type your stuff!</Title>
        <Description>
            StrongOf helps to implement primitives as a strong type that represents a domain object (e.g. UserId, EmailAddress, etc.). It is a simple class that wraps a value and provides a few helper methods to make it easier to work with.
            In contrast to other approaches, StrongOf is above all simple and performant - and not over-engineered.
        </Description>
    </PropertyGroup>

    <!-- Assembly -->
    <PropertyGroup>
        <Tfm>net7.0</Tfm>
        <PlatformTarget>AnyCPU</PlatformTarget>
        <Platforms>x64</Platforms>
        <GlobalNamespacePrefix>StrongOf</GlobalNamespacePrefix>
        <GlobalAssemblyNamePrefix>BenjaminAbt.StrongOf</GlobalAssemblyNamePrefix>
    </PropertyGroup>

    <!-- Project Defaults -->
    <PropertyGroup>
        <TargetFramework>$(Tfm)</TargetFramework>
    </PropertyGroup>

    <!-- Package -->
    <PropertyGroup>
        <IsPackable>false</IsPackable>
        <PackageProjectUrl>https://github.com/BenjaminAbt/StrongOf</PackageProjectUrl>
        <PackageReadmeFile>readme.md</PackageReadmeFile>
        <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
        <PackageTags>Strong, StrongOf, DDD, Value Objects, Domain Driven Design</PackageTags>
    </PropertyGroup>

    <ItemGroup>
        <None Include="readme.md" Pack="true" PackagePath=""/>
        <None Include="LICENSE.txt" Pack="true" PackagePath=""/>
    </ItemGroup>

    <!-- C# -->
    <PropertyGroup>
        <LangVersion>12.0</LangVersion>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    </PropertyGroup>

    <!-- NuGet -->
    <PropertyGroup>
        <IsPackable>false</IsPackable>
    </PropertyGroup>
</Project>
